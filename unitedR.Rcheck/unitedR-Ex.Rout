
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "unitedR"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "unitedR-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('unitedR')
Loading required package: plyr
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("unitedSim")
> ### * unitedSim
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: unitedSim
> ### Title: Simulating a formation
> ### Aliases: unitedSim
> 
> ### ** Examples
> 
> home <- formation(10, NA, c(7,5,3), c(8,8), c(10,10,8))
> away <- formation(5, 8, c(8,8), c(10,10), c(10,10,10),
+  hardness = c(0,0,0,0,1))
> set.seed(123)
> unitedSim(home, away)

Used lineup home was:
	 10-0-15-16-28
Used lineup away was:
	 5-8-16-20-31

The key statistcs are:
	 averageTrainingPointsHome = 0.0342 
	 averageTrainingPointsAway = 0.9658 
	 averagePointsHome = 0.0844 
	 averagePointsAway = 2.879 
	 winProbabilityHome = 0.016 
	 winProbabilityAway = 0.9475 
	 tiedProbability = 0.0366 

The most probable results are:
 goalsHome goalsAway probability cumsumProb
         1         5       0.082      0.082
         1         4       0.073      0.155
         1         6       0.071      0.226
         2         5       0.057      0.283
         2         4       0.051      0.333
         2         6       0.049      0.382

> # can also be simualated
> unitedSim(home, away, r = 100)

Used lineup home was:
	 10-0-15-16-28
Used lineup away was:
	 5-8-16-20-31

The key statistcs based on 100 simulations are:
	 averageTrainingPointsHome = 0.01 
	 averageTrainingPointsAway = 0.99 
	 averagePointsHome = 0.03 
	 averagePointsAway = 2.97 
	 winProbabilityHome = 0.01 
	 winProbabilityAway = 0.99 
	 tiedProbability = 0 

The most probable results are:
 goalsHome goalsAway probability cumsumProb
         1         4        0.10       0.10
         1         5        0.09       0.19
         2         6        0.07       0.26
         1         3        0.06       0.32
         1         6        0.06       0.38
         2         3        0.06       0.44

> # several away lineups
> unitedSim(home, away, away)

The used lineup home
	 10-0-15-16-28
was compared to the following away lineups
         away averageTrainingPointsHome averagePointsHome winProbabilityHome
 5-8-16-20-31                    0.0342            0.0844              0.016
 5-8-16-20-31                    0.0342            0.0844              0.016
 tiedProbability
          0.0366
          0.0366
> # several away lineups simulated
> unitedSim(home, away, away, r = 100)

The used lineup home
	 10-0-15-16-28
was compared to the following away lineups
         away   r averageTrainingPointsHome averagePointsHome
 5-8-16-20-31 100                     0.015              0.03
 5-8-16-20-31 100                     0.020              0.05
 winProbabilityHome tiedProbability
               0.00            0.03
               0.01            0.02
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("unitedSim", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("unitedSimOne")
> ### * unitedSimOne
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: unitedSimOne
> ### Title: Simulating a formation
> ### Aliases: unitedSimOne
> 
> ### ** Examples
> 
> home <- formation(10, NA, c(7,5,3), c(8,8), c(10,10,8))
> away <- formation(5, 8, c(8,8), c(10,10), c(10,10,10),
+  hardness = c(0,0,0,0,1))
> set.seed(123)
> unitedSimOne(home, away)

Used lineup home was:
	 10-0-15-16-28
Used lineup away was:
	 5-8-16-20-31

The key statistcs are:
	 averageTrainingPointsHome = 0.0342 
	 averageTrainingPointsAway = 0.9658 
	 averagePointsHome = 0.0844 
	 averagePointsAway = 2.879 
	 winProbabilityHome = 0.016 
	 winProbabilityAway = 0.9475 
	 tiedProbability = 0.0366 

The most probable results are:
 goalsHome goalsAway probability cumsumProb
         1         5       0.082      0.082
         1         4       0.073      0.155
         1         6       0.071      0.226
         2         5       0.057      0.283
         2         4       0.051      0.333
         2         6       0.049      0.382

> # you can even simulated the game
> unitedSimOne(home, away, r = 100)

Used lineup home was:
	 10-0-15-16-28
Used lineup away was:
	 5-8-16-20-31

The key statistcs based on 100 simulations are:
	 averageTrainingPointsHome = 0.01 
	 averageTrainingPointsAway = 0.99 
	 averagePointsHome = 0.03 
	 averagePointsAway = 2.97 
	 winProbabilityHome = 0.01 
	 winProbabilityAway = 0.99 
	 tiedProbability = 0 

The most probable results are:
 goalsHome goalsAway probability cumsumProb
         1         4        0.10       0.10
         1         5        0.09       0.19
         2         6        0.07       0.26
         1         3        0.06       0.32
         1         6        0.06       0.38
         2         3        0.06       0.44

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("unitedSimOne", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.52 0 0.52 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
